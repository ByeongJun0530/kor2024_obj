[ JDBC ]
    1. JAVA DATABASE CONNECT : 자바 데이터베이스 연동
    2. 현재 java 프로젝트의 jdbc 라이브러리 등록하기, 프로젝트 마다, *PC가 변경되거나 프로젝트 경로가 변경될 때 진행
        1. mysql-connector-j-9.1.0.jar (다운로드)
        2. 현재 프로젝트 내 임의 폴더 내 넣기
        3. 프로젝트 내 넣어둔(복사한) mysql-connector-j-9.1.0.jar 파일 우클릭 ->
            가장 하단의 [라이브러리 추가] 클릭
        4. [OK]
    3. 계층간의 객체
        -DAO [Data Access Object]   : 데이터 접근 객체, 파일/DB에 접근하여 데이터를 가져올 때 사용
        -DTD [Data Transfer Object] : 데이터 이동 객체, 파일/DB에 접근하여 가져온 데이터를 VIEW 까지 이동하기 위해 사용
        -VO [Value Object] : 값 자체 객체, (읽기모드 / setter 없음 )
    4. DAO 에서 DB 연동
        1. 연동할 JDBC 라이브러리 클래스 로드하기, 일반예외처리
        Class.forName("com.mysql.cj.jdbc.Driver")
            mysql : com.mysql.cj.jdbc.Driver, 클래스 패키지 경로
            oracle : oracle.jdbc.OracleDriver
        2. 지정한 DB서버와 계정정보가 일치했을 때 DB 연동을 시도하고, 성공시 연동객체를 반환한다.
        DriverManager.getConnection("DB SERVER URL", "계정명", "비밀번호");
            1. DB SERVER URL: jdbc:mysql://ip주소:port번호/db명
            - 로컬PC기준 : jdbc:mysql://localhost:3306/db명
            2. 계정명 : root
            3. 비밀번호 : 1234

    *인터페이스란? 동일한 목적하의 서로 다른 행위/메소드 를 조작
                                   -------->메이플스토리 A: 공격, B: 방어, C: 스킬
        키보드(인터페이스) A, B, C 키 -------->축구게임 : A:슛, B:태클, C:패스
                                   -------->롤
        *각 게임(객체)로 생각하고 각 게임(객체)를 인터페이스에 서로 다은 게임을 하나의 인터페이스로 조작하기 위해서
        - 모든 PC게임의 A, B, C 키는 존재한다. 하지만 서로 다른 키는 서로 다른 행위를 한다.

    5. JDBC 의 핵심 인터페이스 3개
        1. Connection 인터페이스 : DB와 연동 성공한 객체 정보를 가지고 조작/기능/메소드 제공하는 인터페이스
                Connection conn = DriverManager.getConnection(mysql)
                Connection conn = DriverManager.getConnection(oracle)
                Connection conn = DriverManager.getConnection(mariaDB)
                ----> 서로다른 각 DB 회사에서 제공하는 클래스(만든 사람이 상이하므로 클래스는 다르다.)는 다르다.
                하지만 하나의 인터페이스로 서로다른 회사의 클래스를 사용/조작 한다.
           (1) PreparedStatement ps = conn.prepareStatement ( SQL 문자열 ); : 기재한 SQL 을 매개변수로 전달하면 SQL 를 조작/기능/메소드 제공 객체 반환

        2. PreparedStatement 인터페이스 : 기재된 SQL 를 조작/메소드 제공하는 인터페이스
           (1) ps.setXXX( ? , value), 현재 기재된 ?에 매개변수를 대입하는 함수
                -> XXX : 데이터 타입
                -> ? : 기재된 SQL 내 ?의 순서번호
                -> value : 앞 매개변수 ? 의 대입할 값

           (2) ps.executeUpdate(), 현재 기재된 SQL를 실행하는 함수

        3. ResultSet 인터페이스








